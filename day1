75. Sort Colors
Solved
Medium
Topics
Companies
Hint
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]


class Solution {
public:
    void sortColors(vector<int>& nums) {
        int i = 0;
        int m = 0;
        int  j = nums.size()-1;
        while(m <= j){
            switch(nums[m]){
                case 0:
                swap(nums[m], nums[i]);
                i++;
                m++;
                break;
                case 1:
                 m++;
                 break;
                case 2:
                swap(nums[m], nums[j]);
                j--;
                break;
            }
        }
        
    }
};

//q2=====================
Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2
int count = 0;
        int ans = 0;
        for(int num : nums){
            if(count == 0){
                ans = num; 
            }
            if(num == ans){
                count +=1;
            }
            else {
                count -=1;
            }
        }
        return ans;
     }

// Q=3
53. Maximum Subarray
Solved
Medium
Topics
Companies
Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.

 

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.
Example 2:

Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.
Example 3:

Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
       int sum = 0;
       int maxm = INT_MIN;
       if(nums.size() == 1){
        return nums[0];
       }
       for(int i = 0; i<nums.size(); i++){
         sum += nums[i];
         maxm = max(maxm, sum);
         if(sum < 0){
            sum = 0;
        }
       } 
       return maxm;
    }
};



//Q=4=======
560. Subarray Sum Equals K
Solved
Medium
Topics
Companies
Hint
Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.
Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2

class Solution {
public:
    int subarraySum(vector<int>& a, int k) {  
    unordered_map<int,int> m;
    int cnt = 0;
    int sum = 0;
    m[0] = 1;
    for(int i = 0; i<a.size(); i++){
        sum += a[i];
        if(m.find(sum-k) != m.end()){
              cnt += m[sum-k];
        }
        m[sum]++;
    }
       return cnt;
    }
};

Q5=======================
121. Best Time to Buy and Sell Stock
Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.
Example 1:

Input: prices = [7,1,5,3,6,4]
Output: 5
Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.
Example 2:

Input: prices = [7,6,4,3,1]
Output: 0
Explanation: In this case, no transactions are done and the max profit = 0.

class Solution {
public:
    int maxProfit(vector<int>& prices) {
      int n = prices.size();
      int pmin[n];
      pmin[0] = prices[0];
      int smax[n];
      smax[n-1] = prices[n-1];
      int ans = INT_MIN;
      for(int i = 1; i<n; i++){
            pmin[i] = min(pmin[i-1], prices[i]);
      }
      for(int i = n-2; i>=0; i--){
            smax[i] = max(smax[i+1], prices[i]);
      }
      for(int i = 0; i<n; i++){
           ans = max(ans, (smax[i]-pmin[i]));
      }
      return ans;
    }
};


//================================
349. Intersection of Two Arrays
Solved
Easy
Topics
Companies
Given two integer arrays nums1 and nums2, return an array of their 
intersection
. Each element in the result must be unique and you may return the result in any order.
Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.

class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
       unordered_map<int,int> mp1;
       vector<int> ans;
       for(int i = 0; i<nums1.size(); i++){
        mp1[nums1[i]] = 1;
       } 
       for(int i = 0; i < nums2.size(); i++){ 
            if(mp1[nums2[i]] == 1){
                ans.push_back(nums2[i]);
            }
             mp1[nums2[i]]--; 
       }

       return ans;

    }
};
 
